name: Build and push images

on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true
    - name: Dump upload url to file
      run: echo '${{ steps.create_release.outputs.upload_url }}' > upload_url
    - name: Upload upload_url
      uses: actions/upload-artifact@v1
      with:
        name: upload_url
        path: upload_url

  build-docker-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
      - name: Build image
        uses: ilteoood/docker_buildx@master
        with:
          publish: true
          imageName: webthingsio/gateway
          platform: linux/amd64,linux/arm/v7,linux/arm64
          tag: latest,${{ env.RELEASE_VERSION }}
          dockerHubUser: ${{ secrets.DOCKER_HUB_USER }}
          dockerHubPassword: ${{ secrets.DOCKER_HUB_PASSWORD }}

  build-raspbian-image:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install qemu
        run: |
          sudo apt update
          sudo apt install -y qemu qemu-user-static binfmt-support --no-install-recommends
      - name: Setup qemu-user-static
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Build the image
        run: |
          cd image
          ./build.sh
      - name: Download upload_url
        uses: actions/download-artifact@v1
        with:
          name: upload_url
      - name: Set upload_url
        run: echo "UPLOAD_URL=$(cat upload_url/upload_url)" >> $GITHUB_ENV
      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
      - name: Upload image
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./image/gateway-${{ env.RELEASE_VERSION }}.img.zip
          asset_name: gateway-${{ env.RELEASE_VERSION }}.img.zip
          asset_content_type: application/zip
      - name: Upload image checksum
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./image/gateway-${{ env.RELEASE_VERSION }}.img.zip.sha256sum
          asset_name: gateway-${{ env.RELEASE_VERSION }}.img.zip.sha256sum
          asset_content_type: text/plain
      - name: Find OTA packages
        run: |
          cd image
          echo "GATEWAY_TARBALL=$(ls gateway-*.tar.gz | head -n1)" >> $GITHUB_ENV
          echo "MODULES_TARBALL=$(ls node_modules-*.tar.gz | head -n1)" >> $GITHUB_ENV
      - name: Upload gateway package
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./image/${{ env.GATEWAY_TARBALL }}
          asset_name: ${{ env.GATEWAY_TARBALL }}
          asset_content_type: application/zip
      - name: Upload node modules package
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./image/${{ env.MODULES_TARBALL }}
          asset_name: ${{ env.MODULES_TARBALL }}
          asset_content_type: application/zip
